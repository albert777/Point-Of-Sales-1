<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picLOGO.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAD6ElEQVRIS72Ve1BUVRzH+aeZpmmmRqMZ
        81FqzjDQ7CCOBMU7VsCA4c3gc2EyKBsbGSHQYdsQWFzXFXVIUGBAJTckwrEZMWWMlxUlZgpEQ5APyNwH
        LK+lnO63/f2uuy6zC4Z/dGa+c885997v55zvOfdcl/+tjI+Pw2AceSLpdSZbXWepm4wTaGw8i4fWYiFA
        a68OF27onaqle/Z+e10d1DGgvr5+JmDaPI2Uaj1kX5oRp51C+IlJVkjVJHzKplm+ZVO2ul+ppX3kL1tb
        ekxgJVSMgbycAtI+1+Hds1OQlExhudpkk7XtdcjMYlONAZ7bauERuQfuYZkI3N2Ot0vuIElznQEOEVkB
        0acm8IzCZJNr4QSWqUQRyK1wGK9vUMEvagdiZXJEpGTDPzIDi93D8NQCCQJTNXPPgGJxLRx7aD42w9xD
        M43V4TuwabsK8WmfIHrLHkgTdkLiv5HNScu94nG59Tt8lJvvHECZk7HVfNV+M4sAFE9wVAaSM4pYMVvl
        DHh+iS+bP7toDeu5ZT4ICkt0DqCFtI7a3pwWlADeb6VzNGTs5h2LhUuDEPraIiS98RKefsEXKyTheHVN
        NLakpjsCaBfRDJyZ066hXXLkvZeRKPVAoOcKxKxdDG3WSghNURC+TsBpuRdH5B2yAXsLCp0DaAZuByZZ
        lLm9OemPSk8IjWGPdCYCgnadKEs7QxYDaeRm1NTUzA2wNw8t/xsRx0UNHXWHUBsiGjq5th8MgGqfevYP
        jXImczK2N4+teoC4k/+gU+0DoTpgVv1W4sG7yCkg8ZiOcyeA5OCj7O0h6uLdolnlm46y9JftCsLg77cc
        AXRQ/dRv4LOks088U+xF90jfX+vBrf0r8eDwKgf1KV9BaemnfOg5AO79qcfQ3Xuz6s7tIfT030X1pevY
        WlCFK7tcMVq0EPeVL/K1LWcpij7ORvfNX0BeDov8uJImP4TA0i7EN+qR1HAb8ro25CjzoMhJR756L9YW
        XECwphmZCtX8jKkoyusQcHIYcQ06bLtoxM62UWQ1XINBEDi+TRXt+OCyEZubTFhfOzg/QPfNn7G6uB1R
        XxhnALIv9sMEAbIzN3Cg18x9dI9mGHy8979BBgcG+GQkwDrtfX6ZTPJ+GENu6zCaB0YtdSPyu8aR1TFi
        A0jrTEhWVD4eQn85AmSd+IZfsp9BUdcIi8wJuL11ArLzBn4m9LQRfnnauQE0egJY/9Wph88hpLKPcyaz
        zE4xFhr5hy1iPClfGThKWq93cpVzAzq6fkXH1R6cb/mRde7SFRSXfYZkeTmk8lOILG/G+qNtiK74lkU7
        yF/ZxCN/P2/f/Bb6yYuLy7+eqLI3c+GRdgAAAABJRU5ErkJggg==
</value>
  </data>
</root>